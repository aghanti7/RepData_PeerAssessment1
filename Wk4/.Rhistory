ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm[order(-topHarm$Losses), ], aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Event.Type, Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
str(topHarm)
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free", nrow=2, ncol=1) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlim(reorder(Event.Type, -Losses))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlim(reorder(topHarm$Event.Type, -Losses))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlim(reorder(topHarm$Event.Type, -$topHarm.Losses))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlim(reorder(topHarm$Event.Type, -topHarm$Losses))
reorder(topHarm$Event.Type, -topHarm$Losses)
df <-data.frame(name=c('foo','bar','foo','bar'),period=c('old','old','recent','recent'),val=c(1.23,2.17,4.15,3.65))
d1=df[order(df$period,df$val),]
sn=factor(x=1:4,labels=d1$name)
d1$sn <- sn
p = ggplot(data = d1, aes(x = sn, y = val))
p = p + geom_bar(stat='identity')
p = p + facet_wrap(~period, scale='free_x')
p
rm)(d1, df, p, sn)
rm(d1, df, p, sn)
ls
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses), color = Loss.Type, fill = Loss.Type) + geom_bar(stat="identity", position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses, color = Loss.Type, fill = Loss.Type)) + geom_bar(stat="identity", position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Event.Type, Losses), Losses, color = Loss.Type, fill = Loss.Type)) + geom_bar(stat="identity", position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses, color = Loss.Type, fill = Loss.Type)) + geom_bar(stat="identity", position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Loss.Type, -Losses), Losses, color = Event.Type, fill = Event.Type)) + geom_bar(stat="identity", position="dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
top <- topHarm
topHarm$Loss.Type <- as.factor(topHarm$Loss.Type)
levels(topHarm$Loss.Type)
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
levels(topHarm$Loss.Type) <- rev(levels(topHarm$Loss.Type))
levels(topHarm$Loss.Type)
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
topHarm <- top
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
str(top)
str(topHarm)
identical(top, topHarm)
rm(top)
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
topHarm
top <- topHarm
reorder(topHarm$Loss.Type, topHarm$Event.Type)
reorder(topHarm$Event.Type, topHarm$Losses)
reorder(topHarm$Event.Type, topHarm$Loss.Type)
reorder(topHarm$Event.Type, topHarm$Losses)
reorder(topHarm$Loss.Type, topHarm$Event.Type)
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(Loss.Type~, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(.~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm, aes(Event.Type, Losses)) + geom_bar(stat="identity") + facet_wrap(~Loss.Type, scales="free") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(gridExtra)
ggplot(topHarm[topHarm$Loss.Type == "Fatalities"], aes(Event.Type, Losses)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topHarm[topHarm$Loss.Type == "Fatalities", ], aes(Event.Type, Losses)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
rm(topHarm, top)
#get sum of fatalities for different events across the US
sumFat <- aggregate(FATALITIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum fatalities
topFat <- sumFat[head(order(-sumFat$FATALITIES), 10), ]
#add a column which says what kind of loss this was
topFat$Loss.Type = "Fatalities"
#set column names to be meaningful
names(topFat) = c("Event.Type", "Losses", "Loss.Type")
#get sum of injuries for different events across the US
sumInj <- aggregate(INJURIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum injuries
topInj <- sumInj[head(order(-sumInj$INJURIES), 10), ]
#add a column which says what kind of loss this was
topInj$Loss.Type = "Injuries"
#set column names to be meaningful
names(topInj) = c("Event.Type", "Losses", "Loss.Type")
#concat both data tables
topHarm <- rbind(topFat, topInj)
ggplot(topFat, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(topInj, aes(reorder(Event.Type, -Losses), Losses)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
rm(sumFat, sumInj, topFat, topInj, topHarm)
#get sum of fatalities for different events across the US
sumFat <- aggregate(FATALITIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum fatalities
topFat <- sumFat[head(order(-sumFat$FATALITIES), 10), ]
#get sum of injuries for different events across the US
sumInj <- aggregate(INJURIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum injuries
topInj <- sumInj[head(order(-sumInj$INJURIES), 10), ]
#remove unnecessary data
rm(sumFat, sumInj)
gFat <- ggplot(topFat, aes(reorder(Event.Type, -Losses), Losses)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(Event.Type, -Losses), Losses)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
View(topFat)
View(topInj)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
#title("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
title("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Injuries") +
title("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2,
)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
ggtitle("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Injuries") +
ggtitle("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
ggtitle("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Injuries") +
ggtitle("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
ggtitle("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Injuries") +
ggtitle("Top 10 Severe Weather Events") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Fatalities") +
ggtitle("Top 10 Severe Weather Events Causing Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Severe Weather Events") +
ylab("Injuries") +
ggtitle("Top 10 Severe Weather Events Causing Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
rm(sumFat, sumInj, topFat, topInj, gFat, gInj)
library(data.table)
library(ggplot2)
library(gridExtra)
#read in the storm data - this will take a couple of minutes
#stormData <- read.csv("repdata-data-StormData.csv.bz2", as.is = TRUE)
#convert event type and state to factor
stormData$EVTYPE <- as.factor(stormData$EVTYPE)
stormData$STATE <- as.factor(stormData$STATE)
#get sum of fatalities for different events across the US
sumFat <- aggregate(FATALITIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum fatalities
topFat <- sumFat[head(order(-sumFat$FATALITIES), 10), ]
#get sum of injuries for different events across the US
sumInj <- aggregate(INJURIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum injuries
topInj <- sumInj[head(order(-sumInj$INJURIES), 10), ]
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
#remove unnecessary data
rm(sumFat, sumInj, topFat, topInj, gFat, gInj)
str(stormData)
unique(stormData$PROPDMGEXP)
unique(stormData$CROPDMGEXP)
1e6
as.integer(1e6)
as.integer(1e3)
as.integer(1e9)
View(stormData)
library(plyr)
library(plyr)
library(car)
require(car)
require("car")
install.packages("car")
require("car")
head(recode(stormData$CROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9"))
tail(recode(stormData$CROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9"))
unique(recode(stormData$CROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9"))
unique(recode(stormData$PROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9"))
str(recode(stormData$PROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9"))
str(recode(stormData$CROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9"))
str(stormData)
stormData$PROPDMGEXP <- recode(stormData$PROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9")
stormData$CROPDMGEXP <- recode(stormData$CROPDMGEXP, "''=1; '-'=1; '?'=1; '+'=1; '0'=1; '1'=10; '2'=1e2; 'h'=1e2; 'H'=1e2; '3'=1e3; 'K'=1e3; 'k'=1e3; '4'=1e4; '5'=1e5; '6'=1e6; 'M'=1e6; 'm'=1e6; '7'=1e7; '8'=1e8; 'B'=1e9; 'b'=1e9")
str(stormData)
tail(aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum))
head(aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum))
View(stormData)
totProp <- stormData$PROPDMG * stormData$PROPDMGEXP
sum(totProp)
sum(aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum))[2]
df <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
str(df)
sum(df$`PROPDMG * PROPDMGEXP`)
rm(df, totProp)
str(stormData)
#get sum of property damages (in $) for different events across the US
sumProp <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "PROPDMG"
#get top 10 events that led to maximum property damage
topProp <- sumProp[head(order(-sumProp$PROPDMG), 10), ]
#get sum of crop damages (in $) for different events across the US
sumCrop <- aggregate(CROPDMG*CROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "CROPDMG"
#get top 10 events that led to maximum crop damage
topCrop <- sumCrop[head(order(-sumCrop$PROPDMG), 10), ]
rm(sumProp, sumCrop, topProp, topCrop, gProp, gCrop)
#get sum of property damages (in $) for different events across the US
sumProp <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "PROPDMG"
#get top 10 events that led to maximum property damage
topProp <- sumProp[head(order(-sumProp$PROPDMG), 10), ]
#get sum of crop damages (in $) for different events across the US
sumCrop <- aggregate(CROPDMG*CROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "CROPDMG"
#get top 10 events that led to maximum crop damage
topCrop <- sumCrop[head(order(-sumCrop$CROPDMG), 10), ]
View(topCrop)
View(topProp)
gProp <- ggplot(topProp, aes(reorder(EVTYPE, -PROPDMG), PROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Property Damage (in $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gCrop <- ggplot(topCrop, aes(reorder(EVTYPE, -CROPDMG), CROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Crop Damage (in $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gProp, gCrop, ncol=2)
View(topCrop)
rm(sumProp, sumCrop, topProp, topCrop, gProp, gCrop)
#get sum of property damages (in $) for different events across the US
sumProp <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "PROPDMG"
#get top 10 events that led to maximum property damage
topProp <- sumProp[head(order(-sumProp$PROPDMG), 10), ]
names(topProp)[2] = "PROPDMG"
#get sum of crop damages (in $) for different events across the US
sumCrop <- aggregate(CROPDMG*CROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "CROPDMG"
#get top 10 events that led to maximum crop damage
topCrop <- sumCrop[head(order(-sumCrop$CROPDMG), 10), ]
names(topCrop)[2] = "CROPDMG"
gProp <- ggplot(topProp, aes(reorder(EVTYPE, -PROPDMG), PROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Property Damage (in $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gCrop <- ggplot(topCrop, aes(reorder(EVTYPE, -CROPDMG), CROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Crop Damage (in $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gProp, gCrop, ncol=2)
#remove unnecessary data
rm(sumProp, sumCrop, topProp, topCrop, gProp, gCrop)
#get sum of property damages (in $) for different events across the US
sumProp <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "PROPDMG"
#get top 10 events that led to maximum property damage
topProp <- sumProp[head(order(-sumProp$PROPDMG), 10), ]
names(topProp)[2] = "PROPDMG"
#get sum of crop damages (in $) for different events across the US
sumCrop <- aggregate(CROPDMG*CROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "CROPDMG"
#get top 10 events that led to maximum crop damage
topCrop <- sumCrop[head(order(-sumCrop$CROPDMG), 10), ]
names(topCrop)[2] = "CROPDMG"
gProp <- ggplot(topProp, aes(reorder(EVTYPE, -PROPDMG), PROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Property Damage (in $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gCrop <- ggplot(topCrop, aes(reorder(EVTYPE, -CROPDMG), CROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Crop Damage (in $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gProp, gCrop, ncol=2)
View(topCrop)
View(topProp)
topProp$PROPDMG <- topProp$PROPDMG / 1e9
View(topCrop)
View(topProp)
topCrop$CROPDMG <- topCrop$CROPDMG / 1e9
gProp <- ggplot(topProp, aes(reorder(EVTYPE, -PROPDMG), PROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Property Damage (in billions of $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gCrop <- ggplot(topCrop, aes(reorder(EVTYPE, -CROPDMG), CROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Crop Damage (in billions of $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gProp, gCrop, ncol=2)
rm(sumProp, sumCrop, topProp, topCrop, gProp, gCrop)
#get sum of property damages (in $) for different events across the US
sumProp <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "PROPDMG"
#get top 10 events that led to maximum property damage
topProp <- sumProp[head(order(-sumProp$PROPDMG), 10), ]
names(topProp)[2] = "PROPDMG"
#convert to billions of $
topProp$PROPDMG <- topProp$PROPDMG / 1e9
#get sum of crop damages (in $) for different events across the US
sumCrop <- aggregate(CROPDMG*CROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "CROPDMG"
#get top 10 events that led to maximum crop damage
topCrop <- sumCrop[head(order(-sumCrop$CROPDMG), 10), ]
names(topCrop)[2] = "CROPDMG"
#convert to billions of $
topCrop$CROPDMG <- topCrop$CROPDMG / 1e9
gProp <- ggplot(topProp, aes(reorder(EVTYPE, -PROPDMG), PROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Property Damage (in billions of $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gCrop <- ggplot(topCrop, aes(reorder(EVTYPE, -CROPDMG), CROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Crop Damage (in billions of $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gProp, gCrop, ncol=2)
#remove unnecessary data
rm(sumProp, sumCrop, topProp, topCrop, gProp, gCrop)
#get sum of fatalities for different events across the US
sumFat <- aggregate(FATALITIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum fatalities
topFat <- sumFat[head(order(-sumFat$FATALITIES), 10), ]
#get sum of injuries for different events across the US
sumInj <- aggregate(INJURIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum injuries
topInj <- sumInj[head(order(-sumInj$INJURIES), 10), ]
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
#remove unnecessary data
rm(sumFat, sumInj, topFat, topInj, gFat, gInj)
#get sum of fatalities for different events across the US
sumFat <- aggregate(FATALITIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum fatalities
topFat <- sumFat[head(order(-sumFat$FATALITIES), 10), ]
#get sum of injuries for different events across the US
sumInj <- aggregate(INJURIES ~ EVTYPE, stormData, sum)
#get top 10 events that led to maximum injuries
topInj <- sumInj[head(order(-sumInj$INJURIES), 10), ]
gFat <- ggplot(topFat, aes(reorder(EVTYPE, -FATALITIES), FATALITIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Fatalities") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gInj <- ggplot(topInj, aes(reorder(EVTYPE, -INJURIES), INJURIES)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Injuries") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gFat, gInj, ncol=2)
#remove unnecessary data
rm(sumFat, sumInj, topFat, topInj, gFat, gInj)
#get sum of property damages (in $) for different events across the US
sumProp <- aggregate(PROPDMG*PROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "PROPDMG"
#get top 10 events that led to maximum property damage
topProp <- sumProp[head(order(-sumProp$PROPDMG), 10), ]
names(topProp)[2] = "PROPDMG"
#convert to billions of $
topProp$PROPDMG <- topProp$PROPDMG / 1e9
#get sum of crop damages (in $) for different events across the US
sumCrop <- aggregate(CROPDMG*CROPDMGEXP ~ EVTYPE, stormData, sum)
names(sumProp)[2] = "CROPDMG"
#get top 10 events that led to maximum crop damage
topCrop <- sumCrop[head(order(-sumCrop$CROPDMG), 10), ]
names(topCrop)[2] = "CROPDMG"
#convert to billions of $
topCrop$CROPDMG <- topCrop$CROPDMG / 1e9
gProp <- ggplot(topProp, aes(reorder(EVTYPE, -PROPDMG), PROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Property Damage (in billions of $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gCrop <- ggplot(topCrop, aes(reorder(EVTYPE, -CROPDMG), CROPDMG)) +
geom_bar(stat="identity") +
xlab("Weather Events") +
ylab("Crop Damage (in billions of $)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
grid.arrange(gProp, gCrop, ncol=2)
#remove unnecessary data
rm(sumProp, sumCrop, topProp, topCrop, gProp, gCrop)
getwd()
stormData <- read.csv("repdata-data-StormData.csv.bz2", as.is = TRUE)
save(stormData, file="stormData.rds")
sd <- readRDS("stormData.rds")
sd <- load("stormData.rds")
rm(sd)
saveRDS(stormData, "sd.rds")
sd <- readRDS("sd.rds")
identical(sd, stormData)
str(sd)
getwd()
